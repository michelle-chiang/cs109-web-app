<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>CS109 Final Project</title>
    <link href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/simplex/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/style.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<body>
<% include /partials/header %>

<ul class="nav nav-tabs" id="my-tabs">
  <li class=""><a href="/" data-toggle="tab" aria-expanded="false">Introduction</a></li>
  <li class=""><a href="/EDA" data-toggle="tab">EDA</a></li>
  <li class="active"><a href="/model" data-toggle="tab" aria-expanded="true">Model</a></li>
  <li class=""><a href="/results" data-toggle="tab" aria-expanded="false">Results</a></li>
</ul>
<div id="myTabContent" class="tab-content">
  <h2><b>Modeling Approach and Project Trajectory</b></h2>
  <p>Full project jupyter notebook can be found here: <a href="https://github.com/michelle-chiang/CS109-Final-Project/blob/master/cs109a_final_project_models.ipynb">cs109a_final_project_models.ipynb</a></p>
	<p>Before beginning our modeling phase, we cleaned our data by dropping out any rows with null values, one-hot encoding some categorical variables such as album type, and calculating the average of of various numerical predictors to make that number the number for the playlist overall.</p>
  <p>The baseline model we used was a simple linear regression which produced a R^2 value of .181 for the Spotify predictors-only model. Thus, this is the R^2 value that we are trying to beat with our selected models. Our subsequent strategy was largely divided into two large steps. The first step was creating a model with predictors obtained from the Spotify API. The second step was adding a couple more predictors from other websites to the dataset obtained in step one in the hopes that it would improve our model. For each step, we performed a shotgun strategy for various models followed by a fine tuning phase for two selected models. The models we tried during our shotgun approach were: linear regression, regression with polynomial terms, kNN regression, and random forest regression with multiple depths.We then fine tuned our two best models, which were polynomial term regression and random forest in both steps, using lasso/ridge and optimizing for various criteria (depth, tree number, predictor number), respectively.</p>
  <p>During the process, we had to make some modifications during our data mining. We discovered that scraping playlists of other users required their log in which was not feasible. In addition, none of our members had enough playlists with enough followers for us to add to our data set. Thus, we used 1642 playlists that were generated by Spotify. In addition, during our scraping process, we noticed that the different datasets that we used (mainly the Spotify API and the Million Song Dataset) had some overlapping features so we had decide from which dataset we would scrape from. However, our goal of using a combination of user-specifiable predictors and non-obvious predictors (such as loudness, danceability, time signature) was met.</p>
  
</div>



</body>
</html>